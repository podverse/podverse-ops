#####
##### LOCAL
##### podverse-api
#####

# NOTE:
# If you are running podverse-api with `yarn dev` instead of in a docker container,
# you will need to change all of the host domains from docker service names to localhost.
# ex. podverse_db = localhost, podverse_manticore = localhost

# NOTE:
# Use lowercase true to enable properties.
# Leave value blank or comment out to disable properties.

#####
##### App / General
#####
# Set NODE_ENV to development when using dev containers
NODE_ENV=production
PORT=1234
JWT_SECRET=your-secret-whatever

API_PREFIX=/api
API_VERSION=/v1

USER_AGENT=Podverse/Feed Parser

# Use the public facing domain, not the internal docker network ip address.
COOKIE_DOMAIN=localhost
# for local dev setting this to false is probably ok
COOKIE_IS_SECURE=

# Some endpoints use RateLimiter middleware to prevent spamming requests.
# This var will override all of them to allow 100 requests per minute
# (useful for debugging locally).
RATE_LIMITER_MAX_OVERRIDE=100

#####
##### Maintenance mode
#####
### This will tell other apps that the infrastructure is in maintenance mode,
### so they can show a "under maintenance" screen.
MAINTENANCE_MODE_ENABLED=
MAINTENANCE_MODE_DOWNTIME_EXPECTED=90 # in minutes
MAINTENANCE_MODE_SCHEDULED_START_TIME= # datetime
MAINTENANCE_MODE_SCHEDULED_END_TIME= # datetime

#####
##### Postgres
#####
DB_TYPE=postgres
DB_HOST=podverse_db
DB_PORT=5432
DB_USERNAME=postgres
DB_PASSWORD=mysecretpw
DB_DATABASE=postgres
DB_SSL_CONNECTION=

#####
##### Manticore
##### 
### Manticore is the self-hosted search engine we use to query
### for podcasts, episodes, and mediaRefs by title.
### We could really use help improving our Manticore setup tbh...
MANTICORE_DOMAIN=podverse_manticore
MANTICORE_PORT=9308
MANTICORE_PROTOCOL=http

#####
##### Matomo
#####
### Matomo is our self-hosted analytics tracking service.
### Our Matomo unique pageview tracking data is used as the basis
### of our "sort by popularity" algorithm. (very flawed algo)
### We use Cloudron to deploy and manage our Matomo service.
MATOMO_BASE_URL=
MATOMO_SITE_ID=
MATOMO_AUTH_TOKEN=

#####
##### Minimum mobile version
#####
### If an app is below the minimum version, the user will be forced to update
### to continue using it.
MINIMUM_MOBILE_VERSION="4.0.0"

#####
##### Auth/Membership
#####
EMAIL_VERIFICATION_TOKEN_EXPIRATION=31540000
RESET_PASSWORD_TOKEN_EXPIRATION=86400
FREE_TRIAL_EXPIRATION=2592000
PREMIUM_MEMBERSHIP_EXPIRATION=31540000
PREMIUM_MEMBERSHIP_COST=18 # $ annually
WEBSITE_RESET_PASSWORD_PAGE_PATH=/reset-password?token=
WEBSITE_VERIFY_EMAIL_PAGE_PATH=/verify-email?token=

#####
##### API query results limits
#####
### The maximum results query endpoints can return with responses.
QUERY_AUTHORS_LIMIT=20
QUERY_CATEGORIES_LIMIT=50
QUERY_EPISODES_LIMIT=20
QUERY_MEDIA_REFS_LIMIT=20
QUERY_PLAYLISTS_LIMIT=20
QUERY_PODCASTS_LIMIT=20
QUERY_USER_HISTORY_ITEMS_LIMIT=20
QUERY_USERS_LIMIT=20

#####
##### Clipbot (special user id)
#####
### This id corresponds with a user ID in the database
### that generates mediaRefs (clips aka soundbites, and chapters)
### from RSS <podcast:soundbite> tags.
### The id below corresponds with the id of the "Podverse Clipbot" user
### in the old-sample-database.sql file. In prod, you'll need a different user id.
# SUPER_USER_ID=kOJGv2oGF
### in the qa-database.sql file. In prod, you'll need a different user id.
# SUPER_USER_ID=jISAEEgXa
# TODO: We should try to get rid of SUPER_USER_ID entirely!
# More Info: https://github.com/podverse/podverse-api/issues/569
SUPER_USER_ID=

#####
##### Website related
#####
### NOTE: these are for the *public facing* IP addresses,
### not the internal Docker service network or private IP addresses.
WEBSITE_PROTOCOL=http
WEBSITE_DOMAIN=localhost:3000

#####
##### Email template
#####
### These are used in the templates of the auth related emails we send.
EMAIL_BRAND_COLOR=#2968B1
EMAIL_HEADER_IMAGE_URL=http://localhost:3000/images/podverse-logo-white@2x.png
EMAIL_UNSUBSCRIBE_URL=http://localhost:3000/unsubscribe
LEGAL_NAME=
LEGAL_ADDRESS=
SOCIAL_FACEBOOK_IMAGE_URL=http://localhost:3000/images/social-facebook-128x128.png
SOCIAL_FACEBOOK_PAGE_URL=http://facebook.com/podverse
SOCIAL_GITHUB_IMAGE_URL=http://localhost:3000/images/social-github-128x128.png
SOCIAL_GITHUB_PAGE_URL=http://github.com/podverse
SOCIAL_REDDIT_IMAGE_URL=http://localhost:3000/images/social-reddit-128x128.png
SOCIAL_REDDIT_PAGE_URL=http://reddit.com/r/podcastclips
SOCIAL_TWITTER_IMAGE_URL=http://localhost:3000/images/social-twitter-128x128.png
SOCIAL_TWITTER_PAGE_URL=http://twitter.com/podverse

#####
##### Mailer service
#####
MAILER_DISABLED=1 # 1 to disable
MAILER_HOST=
MAILER_PORT=
MAILER_SERVICE=
MAILER_USERNAME=
MAILER_PASSWORD=
MAILER_FROM=

#####
##### AWS
#####
### AWS is used for our RSS parsing queue (SQS) and image uploads (S3)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=
AWS_QUEUE_FEED_PARSER_PRIORITY_URL=
AWS_QUEUE_FEED_PARSER_URL=
AWS_QUEUE_FEED_PARSER_LIVE_URL=
AWS_QUEUE_FEED_PARSER_ERRORS_URL=
AWS_QUEUE_FEED_PARSER_ERRORS_BATCH_COUNT=10
AWS_IMAGE_S3_BUCKET_NAME=
AWS_IMAGE_CLOUDFRONT_ORIGIN=
AWS_BACKUP_DATABASE_S3_BUCKET_NAME=
AWS_S3_IMAGE_LIMIT_UPDATE_DAYS=30
# Size in pixels of square images we upload to S3 (aka podcast.shrunkImageUrl)
SHRUNK_IMAGE_SIZE=800

#####
##### FCM Google
#####
### We use FCM to send push notifications.
# in the devcontainer set this to /workspaces/config/google/jwt.keys.json
# follow the guide to get your key in podverse-ops/config/google/Firebase API key.md
FCM_GOOGLE_API_AUTH_TOKEN=

#####
##### Podcast Index
#####
### Our RSS parser setup relies on the Podcast Index API for the following:
### 1) RSS feed has updated notifications (send that feed to our queue for re-parsing)
### 2) New podcast discovered (add that feed to our database, then parse feed)
### 3) RSS feed removed (set that podcast to hidden in our database)
### 4) Receive info about podcasts that have value-for-value data
###    exclusively in Podcast Index (aka Podcaster Wallet).
### 5) ??? anything else?
PODCAST_INDEX_AUTH_KEY=
PODCAST_INDEX_SECRET_KEY=
PODCAST_INDEX_BASE_URL=https://api.podcastindex.org/api/1.0
PODCAST_INDEX_RECENTLY_UPDATED_SINCE_TIME=3600000 # in ms
PODCAST_INDEX_NEW_FEEDS_SINCE_TIME=43200000 # in ms

#####
##### Podping
##### 
### We currently only use Podping to let users broadcast "going live"
### and "ending livestream" notifications.
PODPING_HIVE_ACCOUNT=
PODPING_HIVE_POSTING_KEY=

#####
##### Twitter API
#####
### The Twitter API is used as part of our <podcast:socialInteract> integration.
### This API key allows us to render a podcast's Twitter threads within our apps.
TWITTER_API_BEARER_TOKEN=''

#####
##### PayPal
#####
### Payment processor
PAYPAL_MODE=sandbox # live or sandbox
PAYPAL_CLIENT_ID=
PAYPAL_CLIENT_SECRET=

#####
##### App Store
#####
### Payment processor
# The same secret token is used for both prod and sandbox.
# APP_STORE_API_URL_PROD=https://buy.itunes.apple.com
APP_STORE_API_URL_SANDBOX=https://sandbox.itunes.apple.com
APP_STORE_API_SHARED_SECRET=
